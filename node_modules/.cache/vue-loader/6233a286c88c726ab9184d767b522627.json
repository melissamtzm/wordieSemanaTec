{"remainingRequest":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\src\\components\\HelloWorld.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\src\\components\\HelloWorld.vue","mtime":1631858477624},{"path":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\node_modules\\css-loader\\dist\\cjs.js","mtime":1631858451910},{"path":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1631858475664},{"path":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\node_modules\\postcss-loader\\src\\index.js","mtime":1631858463803},{"path":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631858448110},{"path":"C:\\Users\\jmgom\\Documents\\GitHub\\wordieSemanaTec\\node_modules\\vue-loader\\lib\\index.js","mtime":1631858475662}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNsYW5kaW5nLXRleHQgew0KICBtYXJnaW46IDA7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiA1MCU7DQogIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsNCn0NCiN0ZXh0byB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICB0b3A6IDUwJTsNCiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpOw0KICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpOw0KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzAlKTsNCn0NCiNkYWlseVdvcmQgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHRvcDogNTAlOw0KICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwJSk7DQogIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwJSk7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpOw0KfQ0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n\r\n    <!-- Aquí va a ir todo lo del LOG IN-->\r\n    <div style=\"background-color: #0d6efd;\">\r\n      <div class=\"text-center\">\r\n        \r\n        <button v-if=\"!authenticated\" @click=\"login\"  type=\"button\" class=\"btn btn-light\" style=\"  width:200px; height:40px; border-radius:3%;\"> <img src=\"https://img.icons8.com/color/16/000000/google-logo.png\">             Login with Google</button>\r\n        <button v-if=\"!authenticated\" @click=\"signup\"  type=\"button\" class=\"btn btn-light\" style=\"  width:200px; height:40px; border-radius:3%;\"> <img src=\"https://img.icons8.com/color/16/000000/google-logo.png\">             Create an account with Google</button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div v-if=\"authenticated\">\r\n      <div class=\"container-fluid m-0 p-0\">\r\n        <div id=\"bar\" class=\"bg-primary p-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-7\" id=\"dailyWord\">\r\n              <h5 class=\"align-text-top text-white\">DailyWord</h5>\r\n            </div>\r\n            <div class=\"col\" id=\"texto\">\r\n              <h5 class=\"align-text-top text-white\">Mis Palabras</h5>\r\n            </div>\r\n            \r\n            \r\n            <div class=\"col\">\r\n              <i\r\n                class=\"bi-person-circle align-text-top\"\r\n                style=\"font-size: 2rem; color: white\"\r\n              ></i>\r\n            </div>\r\n\r\n             <div class=\"col\">\r\n           <!-- botón de LOGOUT-->\r\n              <button @click=\"logout\" type=\"button\" class=\"btn btn-outline-light\">Logout</button>\r\n            </div>\r\n\r\n            \r\n\r\n          </div>\r\n        </div>\r\n        \r\n        <div id=\"landing-text\" class=\"\">\r\n          <div class=\"row\">\r\n            <p class=\"col-8 offset-3 fs-1 fw-bold\">Hola, {{ firstName }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"col-8 text-muted offset-3 fs-3\">\r\n              You can only fail when you stop trying.\r\n            </p>\r\n\r\n            <!-- aqui imprimo la palabra-->\r\n            <p class=\"col-8 text-muted offset-3 fs-3\">{{ palabra }}</p>\r\n            <!-- aqui imprimo la definición-->\r\n            <p class=\"col-8 text-muted offset-3 fs-3\">{{ def }}</p>\r\n\r\n           \r\n           <!-- botón de save word-->\r\n              <button @click=\"createWord(palabra,def,user.data.displayName)\" type=\"button\" class=\"btn btn-primary\"> Save word</button>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport Firebase from \"../firebase.js\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"HelloWorld\",\r\n  props: {\r\n    msg: String,\r\n    account: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      user: {\r\n        loggedIn: false,\r\n        data: {},\r\n      },\r\n      palabra: null,\r\n      def: null,\r\n      word: \"\",\r\n      defin: \"\",\r\n      name: \"\",\r\n      usuario: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    authenticated() {\r\n      return this.user.loggedIn;\r\n    },\r\n    firstName() {\r\n      if (this.user.data.displayName) {\r\n        return this.user.data.displayName.split(\" \")[0];\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  methods: {\r\n    login() {\r\n      Firebase.login();\r\n    },\r\n    signup(){\r\n      Firebase.signup();\r\n      this.account = true;\r\n    },\r\n    logout() {\r\n      Firebase.logout();\r\n    },\r\n    createWord(word, defin, usuario) {\r\n      Firebase.createWord(word, defin, usuario);\r\n    }\r\n  },\r\n  mounted: function() {\r\n      const auth = getAuth();\r\n      onAuthStateChanged( auth, user => {\r\n        if (user) {\r\n          this.user.loggedIn = true;\r\n          this.user.data = user;\r\n\r\n\r\n          const options = {\r\n  method: 'GET',\r\n  url: 'https://wordsapiv1.p.rapidapi.com/words/',\r\n  params: {random: 'true'},\r\n  headers: {\r\n    'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com',\r\n    'x-rapidapi-key': '97459d675emsh83b437ec412eba5p1ba43bjsn9d7291c09ad7'\r\n  }\r\n};\r\nconst self = this;\r\naxios.request(options).then(function (response) {\r\n  console.log(response.data);\r\n  console.log(response.data.word);\r\n  self.palabra = response.data.word;\r\n  console.log(response.data.results[0].definition);\r\n  self.def = response.data.results[0].definition;\r\n}).catch(function (error) {\r\n  console.error(error);\r\n});\r\n          if (this.account){\r\n            console.log(\"hola\");\r\n            Firebase.createUser(this.user.data.displayName);\r\n          }\r\n        }\r\n        else {\r\n          this.user.loggedIn = false;\r\n          this.user.data = {};\r\n        }\r\n      })\r\n      \r\n      \r\n  \r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style>\r\n#landing-text {\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  -ms-transform: translateY(-50%);\r\n  transform: translateY(-50%);\r\n}\r\n#texto {\r\n  text-align: center;\r\n  position: relative;\r\n  top: 50%;\r\n  -ms-transform: translateY(30%);\r\n  -webkit-transform: translateY(30%);\r\n  transform: translateY(30%);\r\n}\r\n#dailyWord {\r\n  position: relative;\r\n  top: 50%;\r\n  -ms-transform: translateY(30%);\r\n  -webkit-transform: translateY(30%);\r\n  transform: translateY(30%);\r\n}\r\n</style>"]}]}