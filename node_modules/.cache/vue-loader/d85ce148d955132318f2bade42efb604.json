{"remainingRequest":"/Users/melissa/Documents/tec/wordieSemanaTec/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/melissa/Documents/tec/wordieSemanaTec/src/components/HelloWorld.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/melissa/Documents/tec/wordieSemanaTec/src/components/HelloWorld.vue","mtime":1631839963335},{"path":"/Users/melissa/Documents/tec/wordieSemanaTec/node_modules/css-loader/dist/cjs.js","mtime":1631839929270},{"path":"/Users/melissa/Documents/tec/wordieSemanaTec/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631839960769},{"path":"/Users/melissa/Documents/tec/wordieSemanaTec/node_modules/postcss-loader/src/index.js","mtime":1631839944042},{"path":"/Users/melissa/Documents/tec/wordieSemanaTec/node_modules/cache-loader/dist/cjs.js","mtime":1631839924436},{"path":"/Users/melissa/Documents/tec/wordieSemanaTec/node_modules/vue-loader/lib/index.js","mtime":1631839960764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2xhbmRpbmctdGV4dCB7CiAgbWFyZ2luOiAwOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwJTsKICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsKfQojdGV4dG8gewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdG9wOiA1MCU7CiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpOwogIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwJSk7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwJSk7Cn0KI2RhaWx5V29yZCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogNTAlOwogIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzAlKTsKICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpOwp9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n\n    <!-- Aquí va a ir todo lo del LOG IN-->\n    <div style=\"background-color: #0d6efd;\">\n      <div class=\"text-center\">\n        \n        <button v-if=\"!authenticated\" @click=\"login\"  type=\"button\" class=\"btn btn-light\" style=\"  width:200px; height:40px; border-radius:3%;\"> <img src=\"https://img.icons8.com/color/16/000000/google-logo.png\">             Login with Google</button>\n        <button v-if=\"!authenticated\" @click=\"signup\"  type=\"button\" class=\"btn btn-light\" style=\"  width:200px; height:40px; border-radius:3%;\"> <img src=\"https://img.icons8.com/color/16/000000/google-logo.png\">             Create an account with Google</button>\n      </div>\n\n    </div>\n\n    <div v-if=\"authenticated\">\n      <div class=\"container-fluid m-0 p-0\">\n        <div id=\"bar\" class=\"bg-primary p-4\">\n          <div class=\"row\">\n            <div class=\"col-7\" id=\"dailyWord\">\n              <h5 class=\"align-text-top text-white\">DailyWord</h5>\n            </div>\n            <div class=\"col\" id=\"texto\">\n              <h5 class=\"align-text-top text-white\">Mis Palabras</h5>\n            </div>\n            \n            \n            <div class=\"col\">\n              <i\n                class=\"bi-person-circle align-text-top\"\n                style=\"font-size: 2rem; color: white\"\n              ></i>\n            </div>\n\n             <div class=\"col\">\n           <!-- botón de LOGOUT-->\n              <button @click=\"logout\" type=\"button\" class=\"btn btn-outline-light\">Logout</button>\n            </div>\n\n            \n\n          </div>\n        </div>\n        \n        <div id=\"landing-text\" class=\"\">\n          <div class=\"row\">\n            <p class=\"col-8 offset-3 fs-1 fw-bold\">Hola, {{ firstName }}</p>\n          </div>\n          <div>\n            <p class=\"col-8 text-muted offset-3 fs-3\">\n              You can only fail when you stop trying.\n            </p>\n\n            <!-- aqui imprimo la palabra-->\n            <p class=\"col-8 text-muted offset-3 fs-3\">{{ palabra }}</p>\n            <!-- aqui imprimo la definición-->\n            <p class=\"col-8 text-muted offset-3 fs-3\">{{ def }}</p>\n\n           \n           <!-- botón de save word-->\n              <button @click=\"createWord(palabra,def,user.data.displayName)\" type=\"button\" class=\"btn btn-primary\"> Save word</button>\n            \n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n\nimport Firebase from \"../firebase.js\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n    account: Boolean\n  },\n  data() {\n    return {\n      user: {\n        loggedIn: false,\n        data: {},\n      },\n      palabra: null,\n      def: null,\n      word: \"\",\n      defin: \"\",\n      name: \"\",\n      usuario: \"\"\n    };\n  },\n  computed: {\n    authenticated() {\n      return this.user.loggedIn;\n    },\n    firstName() {\n      if (this.user.data.displayName) {\n        return this.user.data.displayName.split(\" \")[0];\n      }\n      return null;\n    },\n  },\n  methods: {\n    login() {\n      Firebase.login();\n    },\n    signup(){\n      Firebase.signup();\n      this.account = true;\n    },\n    logout() {\n      Firebase.logout();\n    },\n    createWord(word, defin, usuario) {\n      Firebase.createWord(word, defin, usuario);\n    }\n  },\n  mounted: function() {\n      const auth = getAuth();\n      onAuthStateChanged( auth, user => {\n        if (user) {\n          this.user.loggedIn = true;\n          this.user.data = user;\n          const options = {\n  method: 'GET',\n  url: 'https://wordsapiv1.p.rapidapi.com/words/',\n  params: {random: 'true'},\n  headers: {\n    'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com',\n    'x-rapidapi-key': '97459d675emsh83b437ec412eba5p1ba43bjsn9d7291c09ad7'\n  }\n};\nconst self = this;\naxios.request(options).then(function (response) {\n  console.log(response.data);\n  console.log(response.data.word);\n  self.palabra = response.data.word;\n  console.log(response.data.results[0].definition);\n  self.def = response.data.results[0].definition;\n}).catch(function (error) {\n  console.error(error);\n});\n          if (this.account){\n            console.log(\"hola\");\n            Firebase.createUser(this.user.data.displayName);\n          }\n        }\n        else {\n          this.user.loggedIn = false;\n          this.user.data = {};\n        }\n      })\n      \n  \n    }\n}\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n#landing-text {\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n}\n#texto {\n  text-align: center;\n  position: relative;\n  top: 50%;\n  -ms-transform: translateY(30%);\n  -webkit-transform: translateY(30%);\n  transform: translateY(30%);\n}\n#dailyWord {\n  position: relative;\n  top: 50%;\n  -ms-transform: translateY(30%);\n  -webkit-transform: translateY(30%);\n  transform: translateY(30%);\n}\n</style>"]}]}