{"remainingRequest":"C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\src\\components\\HelloWorld.vue?vue&type=template&id=469af010&","dependencies":[{"path":"C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\src\\components\\HelloWorld.vue","mtime":1631896838236},{"path":"C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631893082619},{"path":"C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1631893107035},{"path":"C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631893082619},{"path":"C:\\Users\\Jorge Luis Ayala\\Documents\\Tecnológico de Monterrey Pregrado\\SEM 05\\TC2002S Conectando el mundo web\\wordieST\\node_modules\\vue-loader\\lib\\index.js","mtime":1631893107035}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}